package chap08.section1

//제네릭이라는건 "일반화"된 객체를 다양한 타입을 이용하여 사용하는 것 이다.
//자료형의 객체들을 다루는 메서드나 클래스에서 "컴파일 시간에 자료형을 검사"해 적당한 자료형을 선택할 수 있도록 하기 위함이다.
//제네릭의 일반적인 사용은 앵글 브래킷<> 을 사용하고 앵글 브래킷 사이에 형식 매개변수를 사용해 선언한다.
//보통 형ㅇ식 매개변수 T는 자료형 또는 Type의 의미를 대표한다.

class Box<T>(a: T) { //T를 넣었다는건 아직 자료형이 정해져 있지 않고, 코드를 작성해 내려가면서 컴파일시에 결정된다.
    var name: T = a
}

fun main() {
    val box1: Box<Int> = Box<Int>(3) //전부 다 명시적으로 작성
    val box2 = Box("john doe") //ctrl + shift + p 눌러서 추론타입 확인해볼 것
    //따라서 경우에 따라 Box클래스는 다향한 타입을 받을 수 있다.

    println(box1.name)
    println(box2.name)
}

//형식매개변수 이름은 정해져 있지 않으나 관례처럼 사용되는 것 들이 몇가지 있다
/*
E : Element(요소)
K : key(키)
N : Number(숫자)
T : Type(형식)
V : Value(값)
S,U,V etc.. 두 번째, 세 번째, 네 번째
*/



